{"version":3,"sources":["webpack:///./src/views/Test.vue?85c5","webpack:///./src/views/Test.vue","webpack:///./src/views/Test.vue?238a"],"names":["style","onMouseDown","methods","onMousedown","event","column","resizeProxy","this","$refs","left","dragState","startLeft","document","onselectstart","ondragstart","handleMouseMove","deltaLeft","clientX","startMouseLeft","proxyLeft","Math","max","minLeft","handleMouseUp","removeEventListener","addEventListener","render","__scopeId"],"mappings":"iHAAA,W,2GCGI,eAAmF,OAA9EA,MAAA,kCAAsC,QAAK,8BAAE,EAAAC,aAAA,EAAAA,YAAA,sBAAa,kBAIpD,OACXC,QAAS,CACLC,YADK,SACOC,EAAOC,GAAQ,WACrBC,EAAcC,KAAKC,MAAMF,YAC/BA,EAAYN,MAAMS,KAAOF,KAAKG,UAAUC,UAAY,KACpDC,SAASC,cAAgB,WAAa,OAAO,GAC7CD,SAASE,YAAc,WAAa,OAAO,GAE3C,IAAMC,EAAkB,SAACX,GACvB,IAAMY,EAAYZ,EAAMa,QAAU,EAAKP,UAAUQ,eAC3CC,EAAY,EAAKT,UAAUC,UAAYK,EAE7CV,EAAYN,MAAMS,KAAOW,KAAKC,IAAIC,QAASH,GAAa,MAGpDI,EAAgB,SAAhBA,IACJX,SAASY,oBAAoB,YAAaT,GAC1CH,SAASY,oBAAoB,UAAWD,GACxCX,SAASC,cAAgB,KACzBD,SAASE,YAAc,MAGzBF,SAASa,iBAAiB,YAAaV,GACvCH,SAASa,iBAAiB,UAAWF,M,WCzB7C,EAAOG,OAASA,EAChB,EAAOC,UAAY,kBAEJ,gB","file":"static/js/chunk-41ef66fe.25624989.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Test.vue?vue&type=style&index=0&id=b31c757a&scoped=true&lang=css\"","\r\n\r\n<template >\r\n    <div style=\"font-size: 14px;color: #666;\" @click=\"onMouseDown\">剩余支付时间（超时自动关闭）</div>\r\n</template>\r\n \r\n<script>\r\nexport default {\r\n    methods: {\r\n        onMousedown(event, column) {\r\n        const resizeProxy = this.$refs.resizeProxy;\r\n        resizeProxy.style.left = this.dragState.startLeft + 'px';\r\n        document.onselectstart = function() { return false; };//解决拖动会选中文字的问题\r\n        document.ondragstart = function() { return false; };\r\n\r\n        const handleMouseMove = (event) => {\r\n          const deltaLeft = event.clientX - this.dragState.startMouseLeft;\r\n          const proxyLeft = this.dragState.startLeft + deltaLeft;\r\n\r\n          resizeProxy.style.left = Math.max(minLeft, proxyLeft) + 'px';\r\n        };\r\n\r\n        const handleMouseUp = () => {\r\n          document.removeEventListener('mousemove', handleMouseMove);\r\n          document.removeEventListener('mouseup', handleMouseUp);\r\n          document.onselectstart = null;\r\n          document.ondragstart = null;\r\n        };\r\n\r\n        document.addEventListener('mousemove', handleMouseMove);\r\n        document.addEventListener('mouseup', handleMouseUp);\r\n      },\r\n    }\r\n}\r\n// import moment from 'moment';\r\n// export default {\r\n//     name: 'TimeRangPage',\r\n//     data () {\r\n//       return {\r\n//         startTime: \"Sat Aug 28 2021 12:32:23 GMT+0800 (中国标准时间) 0时0分0秒\",\r\n//         endTime: \"Sat Aug 28 2021 14:32:23 GMT+0800 (中国标准时间) 0时0分0秒\",\r\n//         day: 0,\r\n//         hr: 0,\r\n//         min: 0,\r\n//         sec: 0,\r\n//         timeSetInterval: null,\r\n//         showTimeDown: false,\r\n//         showOver: false\r\n//       };\r\n//     },\r\n//     mounted () {\r\n//   this.countdown()\r\n// },\r\n//     methods: {\r\n//      countdown () {\r\n//       const end = Date.parse(new Date('2021-08-28 13:59:23'))\r\n//       const now = Date.parse(new Date())\r\n//       const msec = end - now\r\n\r\n//       console.log(msec)\r\n//       if(msec<0) return;\r\n\r\n//       let day = parseInt(msec / 1000 / 60 / 60 / 24)\r\n//       let hr = parseInt(msec / 1000 / 60 / 60 % 24)\r\n//       let min = parseInt(msec / 1000 / 60 % 60)\r\n//       let sec = parseInt(msec / 1000 % 60)\r\n//       this.day = day\r\n//       this.hr = hr > 9 ? hr : '0' + hr\r\n//       this.min = min > 9 ? min : '0' + min\r\n//       this.sec = sec > 9 ? sec : '0' + sec\r\n//       const that = this\r\n//       if(min>=0 && sec>=0){\r\n//         //倒计时结束关闭订单\r\n//         if(min==0 && sec==0){\r\n\r\n//           return\r\n//         }\r\n//         setTimeout(function () {\r\n//           that.countdown()\r\n//         }, 1000)\r\n//       }\r\n//     }\r\n//     }\r\n//   };\r\n// //拖拽调换顺序\r\n// export default {\r\n//     name: 'Toolbar',\r\n//     data () {\r\n//         return {\r\n//             items: [\r\n//             { key: 1, color: '#ffebcc'},\r\n//             { key: 2, color: '#ffb86c'},\r\n//             { key: 3, color: '#f01b2d'},\r\n//             { key: 4, color: '#f01b2d'},\r\n//             { key: 5, color: '#f01b2d'},\r\n//             { key: 6, color: '#f01b2d'},\r\n//             { key: 7, color: '#f01b2d'},\r\n//             { key: 8, color: '#f01b2d'},\r\n//             { key: 9, color: '#f01b2d'},\r\n//             { key: 10, color: '#f01b2d'},\r\n//             { key: 11, color: '#f01b2d'},\r\n//             { key: 12, color: '#f01b2d'},\r\n//             { key: 13, color: '#f01b2d'},\r\n\r\n//             ],\r\n   \r\n//             dragging: null\r\n//         }\r\n//     },\r\n//     methods:{\r\n//         handleDragStart(e,item){\r\n//             this.dragging = item;\r\n//         },\r\n//         handleDragEnd(e,item){\r\n//             this.dragging = null\r\n//         },\r\n//         //首先把div变成可以放置的元素，即重写dragenter/dragover\r\n//         handleDragOver(e) {\r\n//             e.dataTransfer.dropEffect = 'move'// e.dataTransfer.dropEffect=\"move\";//在dragenter中针对放置目标来设置!\r\n//         },\r\n//         handleDragEnter(e,item){\r\n//             e.dataTransfer.effectAllowed = \"move\"//为需要移动的元素设置dragstart事件\r\n//             if(item === this.dragging){\r\n//             return\r\n//             }\r\n//             const newItems = [...this.items]\r\n//             console.log(newItems)\r\n//             const src = newItems.indexOf(this.dragging)\r\n//             const dst = newItems.indexOf(item)\r\n            \r\n//             newItems.splice(dst, 0, ...newItems.splice(src, 1))\r\n            \r\n//             this.items = newItems\r\n//         }\r\n//     }\r\n// }\r\n</script>\r\n  \r\n<style scoped>\r\n /* .container{\r\n  width: 80px;\r\n  position: absolute;\r\n  left: 0;\r\n  display:flex;\r\n  flex-direction: column;\r\n  padding: 0;\r\n }\r\n .item {\r\n  margin-top: 10px;\r\n  transition:all linear .3s;\r\n  height: 200px;\r\n } */\r\n </style>","import { render } from \"./Test.vue?vue&type=template&id=b31c757a&scoped=true\"\nimport script from \"./Test.vue?vue&type=script&lang=js\"\nexport * from \"./Test.vue?vue&type=script&lang=js\"\n\nimport \"./Test.vue?vue&type=style&index=0&id=b31c757a&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-b31c757a\"\n\nexport default script"],"sourceRoot":""}